- name: Print project name
  debug:
    msg: "{{projectName}}"

- name: Register root project folder
  stat:
    path: "{{root_project_path}}"
  register: projectStat

- name: Create root project folder if not exists
  file:
    path: "{{item.path}}"
    state: directory
  with_items:
    - {path: "{{root_project_path}}"}
    - {path: "{{plugin_folder}}"}
    - {path: "{{checkstyle_folder}}"}
  when: projectStat.stat.exists == false

- name: Init gradle project
  command: "gradle init --type {{projectType}} --project-name {{projectName}} --dsl groovy --test-framework junit --package {{default_package}}"
  args:
    chdir: "{{root_project_path}}"

- name: Copy gradle template
  copy:
    src: "templates/{{item.template}}.tmpl"
    dest: "{{item.path}}/{{item.name}}"
  with_items: "{{config_file_list}}"

- name: Gradle idea
  command: "./gradlew idea"
  args:
    chdir: "{{root_project_path}}"

- name: Create new git hub repository
  uri:
    url: "{{github_api_baseUrl}}{{create_repository_endpoint_url}}"
    method: POST
    headers:
      Accept: application/vnd.github.v3+json
    user: "{{github_account}}"
    password: "{{github_password}}"
    force_basic_auth: yes
    body: "{\"name\": \"{{projectName}}\"}"
    body_format: json
    validate_certs: false
    status_code: 201
    return_content: yes
  register: repositories

- name: Print response
  debug:
    msg: "{{repositories}}"

- name: Init git repository
  command: "{{item}}"
  args:
    chdir: "{{root_project_path}}"
  with_items:
    - "git init"
    - "git add ."
    - "git commit -m \"Init {{projectName}} code base \""
    - "git remote add origin {{github_home}}/{{github_account}}/{{projectName}}.git"
    - "git push origin master"